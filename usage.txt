Usage: make <make_target> [BIN=<binary>] [DEBUG=<debug>] [TARGET=<target_triple>]
<make_target>:
    build
        Build a cargo binary. The option BIN=<binary> is required.
        e.g. make build BIN=app
    <binary> in ${CARGO_EXECUTABLES}
        Build the cargo binary named <binary>.
        e.g. make app
    clean
        Clean all targets, including cargo and cmake.
        e.g. make clean
    clean-cmake | cmake-clean-root
        Remove the cmake build directory and all of it's cache and artifacts.
        e.g. make clean-make
    cmake-clean:
        Run cmake clean.
    cmake-distclean:
        Run cmake clean and remove the directory of the current configuration.
    lib | cargo-lib
        Build cargo libraries.
        e.g. make lib
    run
        Run a cargo binary. The option BIN=<binary> is required.
        e.g. make run BIN=app
    run-<binary> in ${CARGO_EXECUTABLES}
        Run the cargo binary named <binary>.
        e.g. make run-app
    upgrade | cargo-upgrade
        Upgrade cargo dependency crates.
        e.g. make cargo-upgrade
<binary>:
    Specify the cargo binary name to be built or run.
<debug>:
    [ON|OFF] or [1|0]
    Build for debug configuration if ON, and for release configuration if OFF.
    Default is OFF.
<target_triple>:
    This option is used for cross compilation.
    Specify a full Clang triple like x86_64-pc-windows-msvc, aarch64-unknown-linux-gnu...,
    or "native" for the host OS's triple,
    or other simple vendor/architecture string(s) defined by the project's Makefile.
    Default is "native".
    e.g. make build BIN=app TARGET=native
         make build BIN=app TARGET=aarch64-rockchip-linux-gnu
